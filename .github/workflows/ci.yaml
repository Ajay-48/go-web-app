---
name: CI/CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'helm/**'
      - 'k8s'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: build
        run: go build -o go-web-app
      - name: Test
        run: go test ./...
      - name: slack-notification
        id: slackstart
        uses: skarlso/slack-notification-action@v0.3.0
        with:
          message: "Build Completed"
          channel: C07E92526N9
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: Golang Static Analysis Checker
        uses: golang/govulncheck-action@v1
        with:
          version: v1.56.2
  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}
  Image-Scan:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SECRETS_TOKEN }}
      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml
      - name: Commit and push changes
        run: |
          git config --global user.email "ajaykumarbolakonda048@gmail.com"
          git config --global user.name "Ajay-48"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push
